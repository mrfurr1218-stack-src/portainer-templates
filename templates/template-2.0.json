{
	"version": "2",
	"templates": [
		{
			"type": 1,
			"title": "Registry",
			"name": "Registry",
			"note": "This image contains an implementation of the Docker Registry HTTP API V2 for use with Docker 1.6+.",
			"description": "The Docker Registry 2.0 implementation for storing and distributing Docker images.",
			"categories": [
				"docker"
			],			
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
			"image": "registry:latest"
		},
		{

			"type": 1,
			"title": "Adguardhome-sync",
			"name": "Adguardhome-sync",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Adguardhome-sync is a tool to synchronize AdGuardHome config to replica instances.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
			"image": "linuxserver/adguardhome-sync:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "CONFIGFILE",
					"label": "CONFIGFILE",
					"default": "/adguardhome-sync.yaml",
					"description": "Set a custom config file."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/adguardhome-sync"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
         		"type": 1,
			"title": "Airsonic",
			"name": "Airsonic",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Airsonic is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
			"categories": [
				"Music Server"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/airsonic-logo.png",
			"image": "linuxserver/airsonic:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "CONTEXT_PATH",
					"label": "CONTEXT_PATH",
					"default": "<URL_BASE>",
					"description": "For setting url-base in reverse proxy setups."
				},
				{
					"name": "JAVA_OPTS",
					"label": "JAVA_OPTS",
					"default": "<options>",
					"description": "For passing additional java options."
				}
			],
			"ports": [
				"4040:4040/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/airsonic"
			},
			{
				"container": "/music",
				"bind": "/appdata/airsonic/music"
			},
			{
				"container": "/playlists",
				"bind": "/appdata/airsonic/playlists"
			},
			{
				"container": "/podcasts",
				"bind": "/appdata/airsonic/podcasts"
			},
			{
				"container": "/media",
				"bind": "/appdata/airsonic/media"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Apprise-api",
			"name": "Apprise-api",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Apprise-api eco-systems that are looking for a simple notification solution.",
			"categories": [
				"Notifications"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
			"image": "linuxserver/apprise-api:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/apprise-api"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Audacity",
			"name": "Audacity",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Audacity is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
			"image": "linuxserver/audacity:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/audacity"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Authelia",
			"name": "Authelia",
			"image": "authelia/authelia:latest",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/authelia.png",
			"note": "Requires a configuration.yml file in order to work. Documentation is Available \u003ca href='https://docs.authelia.com/deployment/deployment-ha'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp"
			],
			"categories": [
				"Other",
				"Tools",
				"Authentication"
			],
			"description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
			"env": [
				{
					"label": "TZ",
					"name": "TZ"
				}
			],			
			"restart_policy": "unless-stopped",
			"volumes": [
				{
					"bind": "/appdata/authelia",
					"container": "/etc/authelia/"
				}
			]
		},
		{
			"type": 1,
			"title": "Babybuddy",
			"name": "Babybuddy",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Babybuddy guess work.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
			"image": "linuxserver/babybuddy:latest",
			"env": [
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/babybuddy"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Bazarr",
			"name": "Bazarr",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png",
			"image": "linuxserver/bazarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"6767:6767/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/bazarr"
			},
			{
				"container": "/movies",
				"bind": "/appdata/bazarr/movies"
			},
			{
				"container": "/tv",
				"bind": "/appdata/bazarr/tv"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Beets",
			"name": "Beets",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Beets is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png",
			"image": "linuxserver/beets:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8337:8337/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/beets"
			},
			{
				"container": "/music",
				"bind": "/appdata/beets/music"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/beets/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Boinc",
			"name": "Boinc",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "BOINC. It supports virtualized, parallel, and GPU-based applications.",
			"categories": [
				"Research"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/boinc_logo.png",
			"image": "linuxserver/boinc:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "",
					"description": "Optionally set a password for the gui."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/boinc"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Booksonic",
			"name": "Booksonic",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic.png",
			"image": "linuxserver/booksonic:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "CONTEXT_PATH",
					"label": "CONTEXT_PATH",
					"default": "url-base",
					"description": "Base url for use with reverse proxies etc."
				}
			],
			"ports": [
				"4040:4040/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/booksonic"
			},
			{
				"container": "/audiobooks",
				"bind": "/appdata/booksonic/audiobooks"
			},
			{
				"container": "/podcasts",
				"bind": "/appdata/booksonic/podcasts"
			},
			{
				"container": "/othermedia",
				"bind": "/appdata/booksonic/othermedia"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Booksonic-air",
			"name": "Booksonic-air",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Booksonic-air is a platform for accessing the audibooks you own wherever you are. At the moment the platform consists of Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. Booksonic App - An DSub based Android app for connection to Booksonic-Air servers. .",
			"categories": [
				"Audio"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
			"image": "linuxserver/booksonic-air:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "CONTEXT_PATH",
					"label": "CONTEXT_PATH",
					"default": "url-base",
					"description": "Base url for use with reverse proxies etc."
				}
			],
			"ports": [
				"4040:4040/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/booksonic-air"
			},
			{
				"container": "/audiobooks",
				"bind": "/appdata/booksonic-air/audiobooks"
			},
			{
				"container": "/podcasts",
				"bind": "/appdata/booksonic-air/podcasts"
			},
			{
				"container": "/othermedia",
				"bind": "/appdata/booksonic-air/othermedia"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Bookstack",
			"name": "Bookstack",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease. Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore. For more information on BookStack visit their website and check it out: https://www.bookstackapp.com",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png",
			"image": "linuxserver/bookstack:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "APP_URL",
					"label": "APP_URL",
					"default": "",
					"description": "for specifying the IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "<yourdbhost>",
					"description": "for specifying the database host"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "<yourdbuser>",
					"description": "for specifying the database user"
				},
				{
					"name": "DB_PASS",
					"label": "DB_PASS",
					"default": "<yourdbpass>",
					"description": "for specifying the database password"
				},
				{
					"name": "DB_DATABASE",
					"label": "DB_DATABASE",
					"default": "bookstackapp",
					"description": "for specifying the database to be used"
				}
			],
			"ports": [
				"6875:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/bookstack"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Calibre",
			"name": "Calibre",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Calibre is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png",
			"image": "linuxserver/calibre:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "",
					"description": "Optionally set a password for the gui."
				},
				{
					"name": "CLI_ARGS",
					"label": "CLI_ARGS",
					"default": "",
					"description": "Optionally pass cli start arguments to calibre."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/calibre"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Calibre-web",
			"name": "Calibre-web",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Calibre-web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. It is also possible to integrate google drive and edit metadata and your calibre library through the app itself. This software is a fork of library and licensed under the GPL v3 License.",
			"categories": [
				"Books"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png",
			"image": "linuxserver/calibre-web:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "DOCKER_MODS",
					"label": "DOCKER_MODS",
					"default": "linuxserver/calibre-web:calibre",
					"description": "#optional & **x86-64 only** Adds the ability to perform ebook conversion"
				},
				{
					"name": "OAUTHLIB_RELAX_TOKEN_SCOPE",
					"label": "OAUTHLIB_RELAX_TOKEN_SCOPE",
					"default": "1",
					"description": "Optionally set this to allow Google OAUTH to work"
				}
			],
			"ports": [
				"8083:8083/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/calibre-web"
			},
			{
				"container": "/books",
				"bind": "/appdata/calibre-web/books"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Chevereto",
			"name": "Chevereto",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Chevereto is an image hosting software that allows you to create a beautiful and full-featured image hosting website on your own server. It's your hosting and your rules, so say goodbye to closures and restrictions.",
			"categories": [
				"Websites"
			],
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/chevereto:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/chevereto"
			},
			{
				"container": "/data",
				"bind": "/appdata/chevereto/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Cloud9",
			"name": "Cloud9",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Cloud9 Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.",
			"categories": [
				"Development"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9.png",
			"image": "linuxserver/cloud9:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "GITURL",
					"label": "GITURL",
					"default": "https://github.com/linuxserver/docker-cloud9.git",
					"description": "Specify a git repo to checkout on first startup"
				},
				{
					"name": "USERNAME",
					"label": "USERNAME",
					"default": "",
					"description": "Optionally specify a username for http auth"
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "",
					"description": "Optionally specify a password for http auth (if USERNAME and PASSWORD are not set, there will be no http auth)"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/cloud9"
			},
			{
				"container": "/code",
				"bind": "/appdata/cloud9/code"
			},
			{
				"container": "/var/run/docker.sock",
				"bind": "/var/run/docker.sock"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Code-server",
			"name": "Code-server",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Code-server is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome.",
			"categories": [
				"Development"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/vscode-icon.png",
			"image": "linuxserver/code-server:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "password",
					"description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth."
				},
				{
					"name": "HASHED_PASSWORD",
					"label": "HASHED_PASSWORD",
					"default": "",
					"description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below."
				},
				{
					"name": "SUDO_PASSWORD",
					"label": "SUDO_PASSWORD",
					"default": "password",
					"description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password."
				},
				{
					"name": "SUDO_PASSWORD_HASH",
					"label": "SUDO_PASSWORD_HASH",
					"default": "",
					"description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`."
				},
				{
					"name": "PROXY_DOMAIN",
					"label": "PROXY_DOMAIN",
					"default": "code-server.my.domain",
					"description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation"
				}
			],
			"ports": [
				"8443:8443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/code-server"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Cops",
			"name": "Cops",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Cops. I initially thought of Calibre2OPDS but as it generate static file no search was possible. Later I added an simple HTML catalog that should be usable on my Kobo. So COPS's main advantages are : * No need for many dependencies. * No need for a lot of CPU or RAM. * Not much code. * Search is available. * With Dropbox / owncloud it's very easy to have an up to date OPDS server. * It was fun to code. If you want to use the OPDS feed don't forget to specify feed.php at the end of your URL.",
			"categories": [
				"Books"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png",
			"image": "linuxserver/cops:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/cops"
			},
			{
				"container": "/books",
				"bind": "/appdata/cops/books"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Couchpotato",
			"name": "Couchpotato",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Couchpotato is an automatic NZB and torrent downloader. You can keep a `movies I want` list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://couchpota.to/media/images/full.png",
			"image": "linuxserver/couchpotato:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"5050:5050/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/couchpotato"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/couchpotato/downloads"
			},
			{
				"container": "/movies",
				"bind": "/appdata/couchpotato/movies"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Daapd",
			"name": "Daapd",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Daapd, Chromecast, MPD and internet radio.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/owntone-icon.png",
			"image": "linuxserver/daapd:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/daapd"
			},
			{
				"container": "/music",
				"bind": "/appdata/daapd/music"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Darktable",
			"name": "Darktable",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "darktable is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
			"image": "linuxserver/darktable:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/darktable"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Davos",
			"name": "Davos",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/davos.png",
			"image": "linuxserver/davos:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/davos"
			},
			{
				"container": "/download",
				"bind": "/appdata/davos/download"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ddclient",
			"name": "Ddclient",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Ddclient is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
			"categories": [
				"Networking"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
			"image": "linuxserver/ddclient:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/ddclient"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Deluge",
			"name": "Deluge",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client. * Full Encryption * WebUI * Plugin System * Much more...",
			"categories": [
				"File Management"
			],
			"platform": "linux",
			"logo": "https://avatars2.githubusercontent.com/u/6733935?v=3&s=200",
			"image": "linuxserver/deluge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "DELUGE_LOGLEVEL",
					"label": "DELUGE_LOGLEVEL",
					"default": "error",
					"description": "set the loglevel output when running Deluge, default is info for deluged and warning for delgued-web"
				}
			],
			"ports": [
				"8112:8112/tcp",
				"6881:6881/tcp",
				"6881:6881/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/deluge"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/deluge/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Digikam",
			"name": "Digikam",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "digiKam: Professional Photo Management with the Power of Open Source",
			"categories": [
				"Photography"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
			"image": "linuxserver/digikam:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/digikam"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Dillinger",
			"name": "Dillinger",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
			"categories": [
				"Development"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/dillinger-icon.png",
			"image": "linuxserver/dillinger:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/dillinger"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Diskover",
			"name": "Diskover",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Diskover is a file system crawler and disk space usage software that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/diskover-icon-alt.png",
			"image": "linuxserver/diskover:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "REDIS_HOST",
					"label": "REDIS_HOST",
					"default": "redis",
					"description": "Redis host (optional)"
				},
				{
					"name": "REDIS_PORT",
					"label": "REDIS_PORT",
					"default": "6379",
					"description": "Redis port (optional)"
				},
				{
					"name": "ES_HOST",
					"label": "ES_HOST",
					"default": "elasticsearch",
					"description": "ElasticSearch host (optional)"
				},
				{
					"name": "ES_PORT",
					"label": "ES_PORT",
					"default": "9200",
					"description": "ElasticSearch port (optional)"
				},
				{
					"name": "ES_USER",
					"label": "ES_USER",
					"default": "elastic",
					"description": "ElasticSearch username (optional)"
				},
				{
					"name": "ES_PASS",
					"label": "ES_PASS",
					"default": "changeme",
					"description": "ElasticSearch password (optional)"
				},
				{
					"name": "INDEX_NAME",
					"label": "INDEX_NAME",
					"default": "diskover-",
					"description": "Index name prefix (optional)"
				},
				{
					"name": "DISKOVER_OPTS",
					"label": "DISKOVER_OPTS",
					"default": "",
					"description": "Optional arguments to pass to the diskover crawler (optional)"
				},
				{
					"name": "WORKER_OPTS",
					"label": "WORKER_OPTS",
					"default": "",
					"description": "Optional argumens to pass to the diskover bots launcher (optional)"
				},
				{
					"name": "RUN_ON_START",
					"label": "RUN_ON_START",
					"default": "true",
					"description": "Initiate a crawl every time the container is started (optional)"
				},
				{
					"name": "USE_CRON",
					"label": "USE_CRON",
					"default": "true",
					"description": "Run a crawl on as a cron job (optional)"
				}
			],
			"ports": [
				"80:80/tcp",
				"9181:9181/tcp",
				"9999:9999/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/diskover"
			},
			{
				"container": "/data",
				"bind": "/appdata/diskover/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Docker-compose",
			"name": "Docker-compose",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/docker-compose for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/docker-compose:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/docker-compose"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Dokuwiki",
			"name": "Dokuwiki",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Dokuwiki is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
			"image": "linuxserver/dokuwiki:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/dokuwiki"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Domoticz",
			"name": "Domoticz",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.",
			"categories": [
				"Automation"
			],
			"platform": "linux",
			"logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
			"image": "linuxserver/domoticz:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "WEBROOT",
					"label": "WEBROOT",
					"default": "domoticz",
					"description": "Sets webroot to domoticz for usage with subfolder reverse proxy. Not needed unless reverse proxying."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"6144:6144/tcp",
				"1443:1443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/domoticz"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Doublecommander",
			"name": "Doublecommander",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Double Commander is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
			"categories": [
				"File Management"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
			"image": "linuxserver/doublecommander:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/doublecommander"
			},
			{
				"container": "/data",
				"bind": "/appdata/doublecommander/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Duckdns",
			"name": "Duckdns",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Duckdns to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
			"image": "linuxserver/duckdns:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "SUBDOMAINS",
					"label": "SUBDOMAINS",
					"default": "subdomain1,subdomain2",
					"description": "multiple subdomains allowed, comma separated, no spaces"
				},
				{
					"name": "TOKEN",
					"label": "TOKEN",
					"default": "token",
					"description": "DuckDNS token"
				},
				{
					"name": "LOG_FILE",
					"label": "LOG_FILE",
					"default": "false",
					"description": "Set to `true` to log to file (also need to map )."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/duckdns"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Duplicati",
			"name": "Duplicati",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/duplicati-icon.png",
			"image": "linuxserver/duplicati:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "CLI_ARGS",
					"label": "CLI_ARGS",
					"default": "",
					"description": "Optionally specify any [CLI variables you want to launch the app with"
				}
			],
			"ports": [
				"8200:8200/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/duplicati"
			},
			{
				"container": "/backups",
				"bind": "/appdata/duplicati/backups"
			},
			{
				"container": "/source",
				"bind": "/appdata/duplicati/source"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Emby",
			"name": "Emby",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
			"categories": [
				"Home Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png",
			"image": "linuxserver/emby:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/emby"
			},
			{
				"container": "/data/tvshows",
				"bind": "/appdata/emby/data/tvshows"
			},
			{
				"container": "/data/movies",
				"bind": "/appdata/emby/data/movies"
			},
			{
				"container": "/opt/vc/lib",
				"bind": "/opt/vc/lib"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Embystat",
			"name": "Embystat",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Embystat Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png",
			"image": "linuxserver/embystat:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"6555:6555/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/embystat"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Endlessh",
			"name": "Endlessh",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Endlessh is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
			"image": "linuxserver/endlessh:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "MSDELAY",
					"label": "MSDELAY",
					"default": "100000",
					"description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines."
				},
				{
					"name": "MAXLINES",
					"label": "MAXLINES",
					"default": "32",
					"description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes."
				},
				{
					"name": "MAXCLIENTS",
					"label": "MAXCLIENTS",
					"default": "4096",
					"description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue."
				},
				{
					"name": "LOGFILE",
					"label": "LOGFILE",
					"default": "false",
					"description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/logs/endlessh` (`` needs to be mapped)."
				},
				{
					"name": "BINDFAMILY",
					"label": "BINDFAMILY",
					"default": "",
					"description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both."
				}
			],
			"ports": [
				"22:2222/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/endlessh"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "ffmpeg",
			"name": "ffmpeg",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/ffmpeg:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/ffmpeg"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Web File Browser which can be used as a middleware or standalone app.",
			"image": "80x86/filebrowser:latest",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/filebrowser.png",
			"name": "filebrowser",
			"note": "The default user and password is admin/admin.",
			"platform": "linux",
			"ports": [
				"8082:8082/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FileBrowser",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/FileBrowser",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config",
					"container": "/myfiles"
				}
			]
		},
		{

			"type": 1,
			"title": "Filezilla",
			"name": "Filezilla",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "FIleZilla Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
			"image": "linuxserver/filezilla:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/filezilla"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Firefox",
			"name": "Firefox",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Firefox Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
			"image": "linuxserver/firefox:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/firefox"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Fleet",
			"name": "Fleet",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Fleet provides an online web interface which displays a set of maintained images from one or more owned repositories.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/fleet:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "fleet_admin_authentication_type",
					"label": "fleet_admin_authentication_type",
					"default": "DATABASE",
					"description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES."
				},
				{
					"name": "fleet_database_url",
					"label": "fleet_database_url",
					"default": "jdbc:mariadb://<url>:3306/fleet",
					"description": "The full JDBC connection string to the Fleet database"
				},
				{
					"name": "fleet_database_username",
					"label": "fleet_database_username",
					"default": "fleet_user",
					"description": "The username with the relevant GRANT permissions for the database"
				},
				{
					"name": "fleet_database_password",
					"label": "fleet_database_password",
					"default": "dbuserpassword",
					"description": "The database user's password."
				},
				{
					"name": "fleet_admin_secret",
					"label": "fleet_admin_secret",
					"default": "randomstring",
					"description": "A string used as part of the password key derivation process."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/fleet"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Foldingathome",
			"name": "Foldingathome",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Folding@home is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.",
			"platform": "linux",
			"logo": "https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png",
			"image": "linuxserver/foldingathome:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"7396:7396/tcp",
				"36330:36330/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/foldingathome"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Freshrss",
			"name": "Freshrss",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Freshrss is a free, self-hostable aggregator for rss feeds.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/freshrss-icon.png",
			"image": "linuxserver/freshrss:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/freshrss"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Gitlab CE",
			"note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
			"description": "The GitLab Docker images are monolithic images of GitLab running all the necessary services in a single container",
			"categories": [
				"development",
				"project-management"
			],
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
			"image": "linuxserver/adguardhome-sync:latest",
			"ports": [
				"80/tcp",
				"443/tcp",
				"22/tcp"
			],
			"volumes": [
			{
				"container": "/etc/gitlab"
			},
			{ 
				"container": "/var/opt/gitlab"
			},
			{
				"container": "/var/log/gitlab"
			}
		]
		},
		{		
	
			"type": 1,
			"title": "Grav",
			"name": "Grav",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Grav is a Fast, Simple, and Flexible, file-based Web-platform.",
			"categories": [
				"Web Platform"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/grav-icon.png",
			"image": "linuxserver/grav:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/grav"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Grocy",
			"name": "Grocy",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility. Keep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging with this proudly Open Source tool For more information on grocy visit their website and check it out: https://grocy.info",
			"platform": "linux",
			"logo": "https://grocy.info/img/grocy_logo.svg",
			"image": "linuxserver/grocy:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"9283:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/grocy"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Guacd",
			"name": "Guacd",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Guacd - Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. This container is only the backend server component needed to use The official or 3rd party HTML5 frontends.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd.png",
			"image": "linuxserver/guacd:latest",
			"ports": [
				"4822:4822/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Habridge",
			"name": "Habridge",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Habridge",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/habridge-icon.png",
			"image": "linuxserver/habridge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "SEC_KEY",
					"label": "SEC_KEY",
					"default": "<Your Key To Encrypt Security Data>",
					"description": "Key used to secure communication."
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8080:8080/tcp",
				"50000:50000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/habridge"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Headphones",
			"name": "Headphones",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Headphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-banner.png",
			"image": "linuxserver/headphones:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8181:8181/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/headphones"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/headphones/downloads"
			},
			{
				"container": "/music",
				"bind": "/appdata/headphones/music"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Healthchecks",
			"name": "Healthchecks",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Healthchecks is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png",
			"image": "linuxserver/healthchecks:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "SITE_ROOT",
					"label": "SITE_ROOT",
					"default": "<SITE_ROOT>",
					"description": "The site's top-level URL and the port it listens to if differrent than 80 or 443 (e.g., https://healthchecks.example.com:8000)"
				},
				{
					"name": "SITE_NAME",
					"label": "SITE_NAME",
					"default": "<SITE_NAME>",
					"description": "The site's name (e.g., 'Example Corp HealthChecks')"
				},
				{
					"name": "DEFAULT_FROM_EMAIL",
					"label": "DEFAULT_FROM_EMAIL",
					"default": "<DEFAULT_FROM_EMAIL>",
					"description": "From email for alerts"
				},
				{
					"name": "EMAIL_HOST",
					"label": "EMAIL_HOST",
					"default": "<EMAIL_HOST>",
					"description": "SMTP host"
				},
				{
					"name": "EMAIL_PORT",
					"label": "EMAIL_PORT",
					"default": "<EMAIL_PORT>",
					"description": "SMTP port"
				},
				{
					"name": "EMAIL_HOST_USER",
					"label": "EMAIL_HOST_USER",
					"default": "<EMAIL_HOST_USER>",
					"description": "SMTP user"
				},
				{
					"name": "EMAIL_HOST_PASSWORD",
					"label": "EMAIL_HOST_PASSWORD",
					"default": "<EMAIL_HOST_PASSWORD>",
					"description": "SMTP password"
				},
				{
					"name": "EMAIL_USE_TLS",
					"label": "EMAIL_USE_TLS",
					"default": "<True or False>",
					"description": "Use TLS for SMTP (`True` or `False`)"
				},
				{
					"name": "ALLOWED_HOSTS",
					"label": "ALLOWED_HOSTS",
					"default": "<ALLOWED_HOSTS>",
					"description": "array of valid hostnames for the server `['test.com','test2.com']` or `'*'`"
				},
				{
					"name": "SUPERUSER_EMAIL",
					"label": "SUPERUSER_EMAIL",
					"default": "<SUPERUSER_EMAIL>",
					"description": "Superuser email"
				},
				{
					"name": "SUPERUSER_PASSWORD",
					"label": "SUPERUSER_PASSWORD",
					"default": "<SUPERUSER_PASSWORD>",
					"description": "Superuser password"
				},
				{
					"name": "REGENERATE_SETTINGS",
					"label": "REGENERATE_SETTINGS",
					"default": "True/False",
					"description": "Defaults to False. Set to true to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file."
				},
				{
					"name": "SITE_LOGO_URL",
					"label": "SITE_LOGO_URL",
					"default": "<SITE_LOGO_URL>",
					"description": "Custom site logo URL"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/healthchecks"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Hedgedoc",
			"name": "Hedgedoc",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "HedgeDoc gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
			"categories": [
				"Documentation"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/hedgedoc-icon.png",
			"image": "linuxserver/hedgedoc:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "<hostname or ip>",
					"description": "Host address of mysql database"
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "3306",
					"description": "Port to access mysql database default is 3306"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "hedgedoc",
					"description": "Database user"
				},
				{
					"name": "DB_PASS",
					"label": "DB_PASS",
					"default": "<secret password>",
					"description": "Database password"
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "hedgedoc",
					"description": "Database name"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/hedgedoc"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Heimdall",
			"name": "Heimdall",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way. Simplicity is the key to Heimdall. Why not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/heimdall-icon.png",
			"image": "linuxserver/heimdall:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/heimdall"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Homeassistant",
			"name": "Homeassistant",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Homeassistant is open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
			"categories": [
				"Home Automation"
			],
			"platform": "linux",
			"logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
			"image": "linuxserver/homeassistant:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8123:8123/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/homeassistant"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Htpcmanager",
			"name": "Htpcmanager",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Htpcmanager is a front end for many htpc related applications.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png",
			"image": "linuxserver/htpcmanager:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8085:8085/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/htpcmanager"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ipfs",
			"name": "Ipfs",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Ipfs - A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
			"categories": [
				"P2P"
			],
			"platform": "linux",
			"logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Ipfs-logo-1024-ice-text.png/480px-Ipfs-logo-1024-ice-text.png",
			"image": "linuxserver/ipfs:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp",
				"4001:4001/tcp",
				"5001:5001/tcp",
				"8080:8080/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/ipfs"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Jackett",
			"name": "Jackett",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Jackett and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/jackett-logo.png",
			"image": "linuxserver/jackett:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "AUTO_UPDATE",
					"label": "AUTO_UPDATE",
					"default": "true",
					"description": "Allow Jackett to update inside of the container (currently recommended by Jackett and enabled by default)"
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "<run options here>",
					"description": "Optionally specify additional arguments to be passed."
				}
			],
			"ports": [
				"9117:9117/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/jackett"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/jackett/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Jellyfin",
			"name": "Jellyfin",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/jellyfin.png",
			"image": "linuxserver/jellyfin:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "JELLYFIN_PublishedServerUrl",
					"label": "JELLYFIN_PublishedServerUrl",
					"default": "192.168.0.5",
					"description": "Set the autodiscovery response domain or IP address."
				}
			],
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp",
				"7359:7359/udp",
				"1900:1900/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/jellyfin"
			},
			{
				"container": "/data/tvshows",
				"bind": "/appdata/jellyfin/data/tvshows"
			},
			{
				"container": "/data/movies",
				"bind": "/appdata/jellyfin/data/movies"
			},
			{
				"container": "/opt/vc/lib",
				"bind": "/opt/vc/lib"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Jenkins-builder",
			"name": "Jenkins-builder",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/jenkins-builder for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/jenkins-builder:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/jenkins-builder"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Kanzi",
			"name": "Kanzi",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Kanzi. This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi.png",
			"image": "linuxserver/kanzi:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "INVOCATION_NAME",
					"label": "INVOCATION_NAME",
					"default": "kanzi",
					"description": "Specify an invocation name for this skill, use either kanzi or kod."
				},
				{
					"name": "URL_ENDPOINT",
					"label": "URL_ENDPOINT",
					"default": "https://server.com/kanzi/",
					"description": "Specify the URL at which the webserver is reachable either `https://kanzi.server.com/` or `https://server.com/kanzi/` Note the trailing slash **MUST** be included."
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/kanzi"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Lazylibrarian",
			"name": "Lazylibrarian",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Lazylibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. This container is based on the DobyTang fork.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png",
			"image": "linuxserver/lazylibrarian:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "DOCKER_MODS",
					"label": "DOCKER_MODS",
					"default": "linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg",
					"description": "Allows additional functionality to be added, e.g. the Calibredb import program (optional, more info below)"
				}
			],
			"ports": [
				"5299:5299/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/lazylibrarian"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/lazylibrarian/downloads"
			},
			{
				"container": "/books",
				"bind": "/appdata/lazylibrarian/books"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ldap-auth",
			"name": "Ldap-auth",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Ldap-auth.",
			"platform": "linux",
			"logo": "https://jumpcloud.com/wp-content/uploads/2016/12/LDAP_Logo-1420591101.jpg",
			"image": "linuxserver/ldap-auth:latest",
			"env": [
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "FERNETKEY",
					"label": "FERNETKEY",
					"default": "",
					"description": "Optionally define a custom fernet key, has to be base64-encoded 32-byte (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)"
				},
				{
					"name": "CERTFILE",
					"label": "CERTFILE",
					"default": "",
					"description": "Point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon"
				},
				{
					"name": "KEYFILE",
					"label": "KEYFILE",
					"default": "",
					"description": "Point this to the private key file, matching the certificate file referred to in CERTFILE"
				}
			],
			"ports": [
				"8888:8888/tcp",
				"9000:9000/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Libreoffice",
			"name": "Libreoffice",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "LibreOffice. Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
			"image": "linuxserver/libreoffice:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/libreoffice"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Librespeed",
			"name": "Librespeed",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Librespeed is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/librespeed-icon.png",
			"image": "linuxserver/librespeed:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "PASSWORD",
					"description": "Set the password for the results database."
				},
				{
					"name": "CUSTOM_RESULTS",
					"label": "CUSTOM_RESULTS",
					"default": "false",
					"description": "(optional) set to `true` to enable custom results page in `/www/results/index.php`."
				},
				{
					"name": "DB_TYPE",
					"label": "DB_TYPE",
					"default": "sqlite",
					"description": "Defaults to `sqlite`, can also be set to `mysql` or `postgresql`."
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "DB_NAME",
					"description": "Database name. Required for mysql and pgsql."
				},
				{
					"name": "DB_HOSTNAME",
					"label": "DB_HOSTNAME",
					"default": "DB_HOSTNAME",
					"description": "Database address. Required for mysql and pgsql."
				},
				{
					"name": "DB_USERNAME",
					"label": "DB_USERNAME",
					"default": "DB_USERNAME",
					"description": "Database username. Required for mysql and pgsql."
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB_PASSWORD",
					"default": "DB_PASSWORD",
					"description": "Database password. Required for mysql and pgsql."
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "DB_PORT",
					"description": "Database port. Required for mysql."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/librespeed"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Lidarr",
			"name": "Lidarr",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
			"platform": "linux",
			"logo": "https://github.com/lidarr/Lidarr/raw/develop/Logo/400.png",
			"image": "linuxserver/lidarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8686:8686/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/lidarr"
			},
			{
				"container": "/music",
				"bind": "/appdata/lidarr/music"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/lidarr/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Limnoria",
			"name": "Limnoria",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Limnoria A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png",
			"image": "linuxserver/limnoria:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/limnoria"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Lychee",
			"name": "Lychee",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.' ### UPGRADE WARNING Please note that the v4 upgrade process resets ALL password-protected albums. Any albums that were made public with a password will need to be re-secured.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png",
			"image": "linuxserver/lychee:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "mariadb",
					"description": "for specifying the database host"
				},
				{
					"name": "DB_USERNAME",
					"label": "DB_USERNAME",
					"default": "lychee",
					"description": "for specifying the database user"
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB_PASSWORD",
					"default": "dbpassword",
					"description": "for specifying the database password"
				},
				{
					"name": "DB_DATABASE",
					"label": "DB_DATABASE",
					"default": "lychee",
					"description": "for specifying the database to be used"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/lychee"
			},
			{
				"container": "/pictures",
				"bind": "/appdata/lychee/pictures"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mariadb",
			"name": "Mariadb",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Mariadb is one of the most popular database servers. Made by the original developers of MySQL.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mariadb-icon.png",
			"image": "linuxserver/mariadb:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "MYSQL_ROOT_PASSWORD",
					"label": "MYSQL_ROOT_PASSWORD",
					"default": "ROOT_ACCESS_PASSWORD",
					"description": "Set this to root password for installation (minimum 4 characters)."
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "MYSQL_DATABASE",
					"label": "MYSQL_DATABASE",
					"default": "USER_DB_NAME",
					"description": "Specify the name of a database to be created on image startup."
				},
				{
					"name": "MYSQL_USER",
					"label": "MYSQL_USER",
					"default": "MYSQL_USER",
					"description": "This user will have superuser access to the database specified by MYSQL_DATABASE (do not use root here)."
				},
				{
					"name": "MYSQL_PASSWORD",
					"label": "MYSQL_PASSWORD",
					"default": "DATABASE_PASSWORD",
					"description": "Set this to the password you want to use for you MYSQL_USER (minimum 4 characters)."
				},
				{
					"name": "REMOTE_SQL",
					"label": "REMOTE_SQL",
					"default": "http://URL1/your.sql,https://URL2/your.sql",
					"description": "Set this to ingest sql files from an http/https endpoint (comma seperated array)."
				}
			],
			"ports": [
				"3306:3306/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/mariadb"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Medusa",
			"name": "Medusa",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Medusa is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png",
			"image": "linuxserver/medusa:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/medusa"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/medusa/downloads"
			},
			{
				"container": "/tv",
				"bind": "/appdata/medusa/tv"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Minetest",
			"name": "Minetest",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Minetest is a near-infinite-world block sandbox game and a game engine, inspired by InfiniMiner, Minecraft, and the like.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
			"image": "linuxserver/minetest:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "CLI_ARGS",
					"label": "CLI_ARGS",
					"default": "'--gameid minetest'",
					"description": "Optionally specify any [CLI variables you want to launch the app with"
				}
			],
			"ports": [
				"30000:30000/udp"
			],
			"volumes": [
			{
				"container": "/.minetest",
				"bind": "/appdata/minetest/.minetest"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Minisatip",
			"name": "Minisatip",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png",
			"image": "linuxserver/minisatip:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "<parameter>",
					"description": "Specify specific run params for minisatip"
				}
			],
			"ports": [
				"8875:8875/tcp",
				"554:554/tcp",
				"1900:1900/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/minisatip"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mstream",
			"name": "Mstream",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/mstream.png",
			"image": "linuxserver/mstream:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/mstream"
			},
			{
				"container": "/music",
				"bind": "/appdata/mstream/music"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Muximux",
			"name": "Muximux",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Muximux is a lightweight portal to view & manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/muximux-icon.png",
			"image": "linuxserver/muximux:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/muximux"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mylar3",
			"name": "Mylar3",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Mylar3 for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
			"image": "linuxserver/mylar3:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				}
			],
			"ports": [
				"8090:8090/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/mylar3"
			},
			{
				"container": "/comics",
				"bind": "/appdata/mylar3/comics"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/mylar3/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mysql-workbench",
			"name": "Mysql-workbench",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "MySQL Workbench is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
			"image": "linuxserver/mysql-workbench:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/mysql-workbench"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nano",
			"name": "Nano",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Nano is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.",
			"platform": "linux",
			"logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
			"image": "linuxserver/nano:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "PEER_HOST",
					"label": "PEER_HOST",
					"default": "localhost",
					"description": "Default peer host (can be overidden with an array by command line options)"
				},
				{
					"name": "LIVE_GENESIS_PUB",
					"label": "LIVE_GENESIS_PUB",
					"default": "GENESIS_PUBLIC",
					"description": "Genesis block public key"
				},
				{
					"name": "LIVE_GENESIS_ACCOUNT",
					"label": "LIVE_GENESIS_ACCOUNT",
					"default": "nano_xxxxxx",
					"description": "Genesis block account"
				},
				{
					"name": "LIVE_GENESIS_WORK",
					"label": "LIVE_GENESIS_WORK",
					"default": "WORK_FOR_BLOCK",
					"description": "Genesis block proof of work"
				},
				{
					"name": "LIVE_GENESIS_SIG",
					"label": "LIVE_GENESIS_SIG",
					"default": "BLOCK_SIGNATURE",
					"description": "Genesis block signature"
				},
				{
					"name": "CLI_OPTIONS",
					"label": "CLI_OPTIONS",
					"default": "--config node.enable_voting=true",
					"description": "Node run command cli args"
				},
				{
					"name": "LMDB_BOOTSTRAP_URL",
					"label": "LMDB_BOOTSTRAP_URL",
					"default": "http://example.com/Nano_64_version_20.7z",
					"description": "HTTP/HTTPS endpoint to download a 7z file with the data.ldb to bootstrap to this node"
				}
			],
			"ports": [
				"8075:8075/tcp",
				"7076:3000/tcp",
				"7077:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/nano"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nano-wallet",
			"name": "Nano-wallet",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Nano-wallet. You will need to pass a valid RPC host when accessing this container.",
			"platform": "linux",
			"logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
			"image": "linuxserver/nano-wallet:latest",
			"ports": [
				"80:80/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Netbootxyz",
			"name": "Netbootxyz",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Netbootxyz is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
			"platform": "linux",
			"logo": "https://netboot.xyz/images/netboot.xyz.gif",
			"image": "linuxserver/netbootxyz:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "MENU_VERSION",
					"label": "MENU_VERSION",
					"default": "1.9.9",
					"description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)"
				},
				{
					"name": "PORT_RANGE",
					"label": "PORT_RANGE",
					"default": "30000:30010",
					"description": "Specify the port range tftp will use for data transfers [(see Wikipedia)"
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)"
				}
			],
			"ports": [
				"3000:3000/tcp",
				"69:69/udp",
				"8080:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/netbootxyz"
			},
			{
				"container": "/assets",
				"bind": "/appdata/netbootxyz/assets"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Netbox",
			"name": "Netbox",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Netbox tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg",
			"image": "linuxserver/netbox:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "SUPERUSER_EMAIL",
					"label": "SUPERUSER_EMAIL",
					"default": "<SUPERUSER_EMAIL>",
					"description": "Email address for `admin` account"
				},
				{
					"name": "SUPERUSER_PASSWORD",
					"label": "SUPERUSER_PASSWORD",
					"default": "<SUPERUSER_PASSWORD>",
					"description": "Password for `admin` account"
				},
				{
					"name": "ALLOWED_HOST",
					"label": "ALLOWED_HOST",
					"default": "<ALLOWED_HOST>",
					"description": "The hostname you will use to access the app (i.e., netbox.example.com)"
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "<DB_NAME>",
					"description": "Database name (default: netbox)"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "<DB_USER>",
					"description": "Database user"
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB_PASSWORD",
					"default": "<DB_PASSWORD>",
					"description": "Database password"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "<DB_HOST>",
					"description": "Database host (default: postgres)"
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "<DB_PORT>",
					"description": "Database port (defaul: 5432)"
				},
				{
					"name": "REDIS_HOST",
					"label": "REDIS_HOST",
					"default": "<REDIS_HOST>",
					"description": "Redis host (default: redis)"
				},
				{
					"name": "REDIS_PORT",
					"label": "REDIS_PORT",
					"default": "<REDIS_PORT>",
					"description": "Redis port number (default: 6379)"
				},
				{
					"name": "REDIS_PASSWORD",
					"label": "REDIS_PASSWORD",
					"default": "<REDIS_PASSWORD>",
					"description": "Redis password (default: none)"
				},
				{
					"name": "REDIS_DB_TASK",
					"label": "REDIS_DB_TASK",
					"default": "<REDIS_DB_TASK>",
					"description": "Redis database ID for tasks (default: 0)"
				},
				{
					"name": "REDIS_DB_CACHE",
					"label": "REDIS_DB_CACHE",
					"default": "<REDIS_DB_CACHE>",
					"description": "Redis database ID for caching (default: 1)"
				},
				{
					"name": "BASE_PATH",
					"label": "BASE_PATH",
					"default": "<BASE_PATH>",
					"description": "The path you will use to access the app (i.e., /netbox, optional, default: none)"
				},
				{
					"name": "REMOTE_AUTH_ENABLED",
					"label": "REMOTE_AUTH_ENABLED",
					"default": "<REMOTE_AUTH_ENABLED>",
					"description": "Enable remote authentication (optional, default: False)"
				},
				{
					"name": "REMOTE_AUTH_BACKEND",
					"label": "REMOTE_AUTH_BACKEND",
					"default": "<REMOTE_AUTH_BACKEND>",
					"description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend)"
				},
				{
					"name": "REMOTE_AUTH_HEADER",
					"label": "REMOTE_AUTH_HEADER",
					"default": "<REMOTE_AUTH_HEADER>",
					"description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER)"
				},
				{
					"name": "REMOTE_AUTH_AUTO_CREATE_USER",
					"label": "REMOTE_AUTH_AUTO_CREATE_USER",
					"default": "<REMOTE_AUTH_AUTO_CREATE_USER>",
					"description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False)"
				},
				{
					"name": "REMOTE_AUTH_DEFAULT_GROUPS",
					"label": "REMOTE_AUTH_DEFAULT_GROUPS",
					"default": "<REMOTE_AUTH_DEFAULT_GROUPS>",
					"description": "The list of groups to assign a new user account when created using remote authentication (optional, default: [])"
				},
				{
					"name": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
					"label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
					"default": "<REMOTE_AUTH_DEFAULT_PERMISSIONS>",
					"description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {})"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/netbox"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nextcloud",
			"name": "Nextcloud",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Nextcloud gives you access to all your files wherever you are. Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
			"image": "linuxserver/nextcloud:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/nextcloud"
			},
			{
				"container": "/data",
				"bind": "/appdata/nextcloud/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nginx",
			"name": "Nginx",
			"note": "Official build of Nginx.",
			"description": "High performance web server",
			"categories": [
				"webserver"
			],
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
			"image": "nginx:latest",
			"ports": [
				"80/tcp",
				"443/tcp"
			],
			"volumes": [{
					"container": "/etc/nginx"
				},
				{
					"container": "/usr/share/nginx/html"
				}
			]
		},
		{
			"type": 1,
			"title": "Nginx",
			"name": "Nginx",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Nginx is a simple webserver with php support. The config files reside in `` for easy user customization.",
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
			"image": "linuxserver/nginx:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/nginx"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ngircd",
			"name": "Ngircd",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Ngircd. It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
			"image": "linuxserver/ngircd:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"6667:6667/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/ngircd"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nntp2nntp",
			"name": "Nntp2nntp",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Nntp2nntp for this project has received no changes since 06.08.15 and is likely abandoned permanently. For this reason we strongly recommend you do not make this application public facing and if you must do so other layers of security and SSL should be considered an absolute bare minimum requirement. We see this proxy being used primarily on a LAN so that all the users NNTP applications can share a common set of internal credentials allowing for central managment of the upstream account e.g change provider, server, thread limits for all applications with one global config change.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png",
			"image": "linuxserver/nntp2nntp:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "PUID",
					"label": "PUID",
					"default": "<yourUID>",
					"description": "specify your UID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "<yourGID>",
					"description": "specify your GID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"1563:1563/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/nntp2nntp"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nzbget",
			"name": "Nzbget",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Nzbget is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/nzbget-alt.png",
			"image": "linuxserver/nzbget:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "VERSION",
					"label": "VERSION",
					"default": "latest",
					"description": "Supported values are LATEST, PLEXPASS or a specific version number."
				}
			],
			"ports": [
				"6789:6789/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/nzbget"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/nzbget/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nzbhydra2",
			"name": "Nzbhydra2",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Nzbhydra2. It provides easy access to a number of raw and newznab based indexers. The application NZBHydra 2 is replacing NZBHydra 1 and supports migrating from V1. Be wary that there may be some compatibility issues for those migrating from V1 to V2, so ensure you back up your old configuration before moving over to the new version. **NOTE:** The last version that supports migration is `linuxserver/nzbhydra2:v2.10.2-ls49`",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
			"image": "linuxserver/nzbhydra2:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"5076:5076/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/nzbhydra2"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/nzbhydra2/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ombi",
			"name": "Ombi",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Ombi allows you to host your own Plex Request and user management system. If you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface! Manage all your requests for Movies and TV with ease, leave notes for the user and get notification when a user requests something. Allow your users to post issues against their requests so you know there is a problem with the audio etc. Even automatically send them weekly newsletters of new content that has been added to your Plex server!",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png",
			"image": "linuxserver/ombi:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "BASE_URL",
					"label": "BASE_URL",
					"default": "/ombi",
					"description": "Subfolder can optionally be defined as an env variable for reverse proxies. Keep in mind that once this value is defined, the gui setting for base url no longer works. To use the gui setting, remove this env variable."
				}
			],
			"ports": [
				"3579:3579/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/ombi"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Openssh-server",
			"name": "Openssh-server",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Openssh-server is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.",
			"platform": "linux",
			"logo": "https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png",
			"image": "linuxserver/openssh-server:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "PUBLIC_KEY",
					"label": "PUBLIC_KEY",
					"default": "yourpublickey",
					"description": "Optional ssh public key, which will automatically be added to authorized_keys."
				},
				{
					"name": "PUBLIC_KEY_FILE",
					"label": "PUBLIC_KEY_FILE",
					"default": "/path/to/file",
					"description": "Optionally specify a file containing the public key (works with docker secrets)."
				},
				{
					"name": "PUBLIC_KEY_DIR",
					"label": "PUBLIC_KEY_DIR",
					"default": "/path/to/directory/containing/_only_/pubkeys",
					"description": "Optionally specify a directory containing the public keys (works with docker secrets)."
				},
				{
					"name": "SUDO_ACCESS",
					"label": "SUDO_ACCESS",
					"default": "false",
					"description": "Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access."
				},
				{
					"name": "PASSWORD_ACCESS",
					"label": "PASSWORD_ACCESS",
					"default": "false",
					"description": "Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well."
				},
				{
					"name": "USER_PASSWORD",
					"label": "USER_PASSWORD",
					"default": "password",
					"description": "Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access."
				},
				{
					"name": "USER_PASSWORD_FILE",
					"label": "USER_PASSWORD_FILE",
					"default": "/path/to/file",
					"description": "Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets)."
				},
				{
					"name": "USER_NAME",
					"label": "USER_NAME",
					"default": "linuxserver.io",
					"description": "Optionally specify a user name (Default:`linuxserver.io`)"
				}
			],
			"ports": [
				"2222:2222/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/openssh-server"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Oscam",
			"name": "Oscam",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Oscam is an Open Source Conditional Access Module software used for descrambling DVB transmissions using smart cards. It's both a server and a client.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/oscam-logo.png",
			"image": "linuxserver/oscam:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8888:8888/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/oscam"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Overseerr",
			"name": "Overseerr",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Overseerr is a free and open source software application for managing requests for your media library.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png",
			"image": "linuxserver/overseerr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"5055:5055/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/overseerr"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Paperless-ng",
			"name": "Paperless-ng",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Paperless-ng is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.'",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/paperless-ng:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "REDIS_URL",
					"label": "REDIS_URL",
					"default": "",
					"description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /settings.py"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/paperless-ng"
			},
			{
				"container": "/data",
				"bind": "/appdata/paperless-ng/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Papermerge",
			"name": "Papermerge",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Papermerge primarily designed for archiving and retrieving your digital documents. Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.'",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png",
			"image": "linuxserver/papermerge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "REDIS_URL",
					"label": "REDIS_URL",
					"default": "",
					"description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /settings.py"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/papermerge"
			},
			{
				"container": "/data",
				"bind": "/appdata/papermerge/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Photoshow",
			"name": "Photoshow",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Photoshow is gallery software at its easiest, it doesn't even require a database.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/photoshow-icon.png",
			"image": "linuxserver/photoshow:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/photoshow"
			},
			{
				"container": "/Pictures:ro",
				"bind": "/appdata/photoshow/Pictures:ro"
			},
			{
				"container": "/Thumbs",
				"bind": "/appdata/photoshow/Thumbs"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Phpmyadmin",
			"name": "Phpmyadmin",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Phpmyadmin is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
			"categories": [
				"System Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
			"image": "linuxserver/phpmyadmin:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "PMA_ARBITRARY",
					"label": "PMA_ARBITRARY",
					"default": "1",
					"description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup)"
				},
				{
					"name": "PMA_ABSOLUTE_URI",
					"label": "PMA_ABSOLUTE_URI",
					"default": "https://phpmyadmin.example.com",
					"description": "Set the URL you will use to access the web frontend"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/phpmyadmin"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pidgin",
			"name": "Pidgin",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Pidgin is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
			"image": "linuxserver/pidgin:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/pidgin"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Piwigo",
			"name": "Piwigo",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Piwigo is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/piwigo-icon.png",
			"image": "linuxserver/piwigo:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/piwigo"
			},
			{
				"container": "/gallery",
				"bind": "/appdata/piwigo/gallery"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pixapop",
			"name": "Pixapop",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Pixapop is an open-source single page application to view your photos in the easiest way possible.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pixapop.png",
			"image": "linuxserver/pixapop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "APP_USERNAME",
					"label": "APP_USERNAME",
					"default": "admin",
					"description": "Specify a username to enable authentication."
				},
				{
					"name": "APP_PASSWORD",
					"label": "APP_PASSWORD",
					"default": "admin",
					"description": "Specify a password to enable authentication."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/pixapop"
			},
			{
				"container": "/photos",
				"bind": "/appdata/pixapop/photos"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Plex",
			"name": "Plex",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/plex-icon.png",
			"image": "linuxserver/plex:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "VERSION",
					"label": "VERSION",
					"default": "docker",
					"description": "Set whether to update plex or not - see Application Setup section."
				},
				{
					"name": "PLEX_CLAIM",
					"label": "PLEX_CLAIM",
					"default": "",
					"description": "Optionally you can obtain a claim token from https://plex.tv/claim and input here. Keep in mind that the claim tokens expire within 4 minutes."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/plex"
			},
			{
				"container": "/tv",
				"bind": "/appdata/plex/tv"
			},
			{
				"container": "/movies",
				"bind": "/appdata/plex/movies"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Projectsend",
			"name": "Projectsend",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Projectsend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.",
			"platform": "linux",
			"logo": "http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png",
			"image": "linuxserver/projectsend:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "MAX_UPLOAD",
					"label": "MAX_UPLOAD",
					"default": "<5000>",
					"description": "To set maximum upload size (in MB), default if unset is 5000."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/projectsend"
			},
			{
				"container": "/data",
				"bind": "/appdata/projectsend/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pwndrop",
			"name": "Pwndrop",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Pwndrop is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
			"image": "linuxserver/pwndrop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "SECRET_PATH",
					"label": "SECRET_PATH",
					"default": "/pwndrop",
					"description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/pwndrop"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pydio-cells",
			"name": "Pydio-cells",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Pydio-cells is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/pydio-icon.png",
			"image": "linuxserver/pydio-cells:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "EXTERNALURL",
					"label": "EXTERNALURL",
					"default": "yourdomain.url",
					"description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT)."
				},
				{
					"name": "SERVER_IP",
					"label": "SERVER_IP",
					"default": "0.0.0.0",
					"description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy)."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"33060:33060/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/pydio-cells"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pyload",
			"name": "Pyload",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Pyload is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pyload-icon.png",
			"image": "linuxserver/pyload:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8000:8000/tcp",
				"7227:7227/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/pyload"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/pyload/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pylon",
			"name": "Pylon",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Pylon is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
			"image": "linuxserver/pylon:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "GITURL",
					"label": "GITURL",
					"default": "https://github.com/linuxserver/docker-pylon.git",
					"description": "Specify a git repo to checkout on first startup"
				},
				{
					"name": "PYUSER",
					"label": "PYUSER",
					"default": "myuser",
					"description": "Specify a basic auth user."
				},
				{
					"name": "PYPASS",
					"label": "PYPASS",
					"default": "mypass",
					"description": "Specify a basic auth password."
				}
			],
			"ports": [
				"3131:3131/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/pylon"
			},
			{
				"container": "/code",
				"bind": "/appdata/pylon/code"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Qbittorrent",
			"name": "Qbittorrent",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "The Qbittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png",
			"image": "linuxserver/qbittorrent:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "WEBUI_PORT",
					"label": "WEBUI_PORT",
					"default": "8080",
					"description": "for changing the port of the webui, see below for explanation"
				}
			],
			"ports": [
				"6881:6881/tcp",
				"6881:6881/udp",
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/qbittorrent"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/qbittorrent/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Quassel-core",
			"name": "Quassel-core",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Quassel-core is downloaded by your client upon reconnection allowing infinite scrollback through time.",
			"platform": "linux",
			"logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
			"image": "linuxserver/quassel-core:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "--config-from-environment",
					"description": "Custom CLI options for Quassel"
				}
			],
			"ports": [
				"4242:4242/tcp",
				"113:10113/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/quassel-core"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Quassel-web",
			"name": "Quassel-web",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Quassel-web",
			"platform": "linux",
			"logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
			"image": "linuxserver/quassel-web:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "QUASSEL_CORE",
					"label": "QUASSEL_CORE",
					"default": "192.168.1.10",
					"description": "specify the URL or IP address of your Quassel Core instance"
				},
				{
					"name": "QUASSEL_PORT",
					"label": "QUASSEL_PORT",
					"default": "4242",
					"description": "specify the port of your Quassel Core instance"
				},
				{
					"name": "URL_BASE",
					"label": "URL_BASE",
					"default": "/quassel",
					"description": "Specify a url-base in reverse proxy setups ie. `/quassel`"
				}
			],
			"ports": [
				"64080:64080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/quassel-web"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Radarr",
			"name": "Radarr",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
			"image": "linuxserver/radarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"7878:7878/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/radarr"
			},
			{
				"container": "/movies",
				"bind": "/appdata/radarr/movies"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/radarr/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Raneto",
			"name": "Raneto",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Raneto - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png",
			"image": "linuxserver/raneto:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/raneto"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Rdesktop",
			"name": "Rdesktop",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Rdesktop - Ubuntu based containers containing full desktop environments in officially supported flavors accessible via RDP.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png",
			"image": "linuxserver/rdesktop:latest",
			"privileged": true,
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3389:3389/tcp"
			],
			"volumes": [
			{
				"container": "/var/run/docker.sock",
				"bind": "/var/run/docker.sock"
			},
			{
				"container": "/config",
				"bind": "/appdata/rdesktop"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Remmina",
			"name": "Remmina",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Remmina is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
			"image": "linuxserver/remmina:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/remmina"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Requestrr",
			"name": "Requestrr",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png",
			"image": "linuxserver/requestrr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"4545:4545/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/requestrr"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Resilio-sync",
			"name": "Resilio-sync",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Resilio-sync uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.",
			"platform": "linux",
			"logo": "https://www.resilio.com/img/individual/freeproduct.jpg",
			"image": "linuxserver/resilio-sync:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8888:8888/tcp",
				"55555:55555/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/resilio-sync"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/resilio-sync/downloads"
			},
			{
				"container": "/sync",
				"bind": "/appdata/resilio-sync/sync"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Rsnapshot",
			"name": "Rsnapshot",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Rsnapshot is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.'",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/rsnapshot.png",
			"image": "linuxserver/rsnapshot:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/rsnapshot"
			},
			{
				"container": "/.snapshots",
				"bind": "/appdata/rsnapshot/.snapshots"
			},
			{
				"container": "/data",
				"bind": "/appdata/rsnapshot/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sabnzbd",
			"name": "Sabnzbd",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Sabnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/sabnzbd-icon.png",
			"image": "linuxserver/sabnzbd:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8080:8080/tcp",
				"9090:9090/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/sabnzbd"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/sabnzbd/downloads"
			},
			{
				"container": "/incomplete-downloads",
				"bind": "/appdata/sabnzbd/incomplete-downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Scrutiny",
			"name": "Scrutiny",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Scrutiny WebUI for smartd S.M.A.R.T monitoring. Scrutiny is a Hard Drive Health Dashboard & Monitoring solution, merging manufacturer provided S.M.A.R.T metrics with real-world failure rates from Backblaze.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/docs/dashboard.png",
			"image": "linuxserver/scrutiny:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "SCRUTINY_API_ENDPOINT",
					"label": "SCRUTINY_API_ENDPOINT",
					"default": "http://localhost:8080",
					"description": "# optional - API endpoint of the scrutiny UI. Do not change unless using as a remote collector"
				},
				{
					"name": "SCRUTINY_WEB",
					"label": "SCRUTINY_WEB",
					"default": "true",
					"description": "# optional - Run the web service."
				},
				{
					"name": "SCRUTINY_COLLECTOR",
					"label": "SCRUTINY_COLLECTOR",
					"default": "true",
					"description": "# optional - Run the metrics collector."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/scrutiny"
			},
			{
				"container": "/run/udev:ro",
				"bind": "/run/udev:ro"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sickchill",
			"name": "Sickchill",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Sickchill is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/sickchill-icon.png",
			"image": "linuxserver/sickchill:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/sickchill"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/sickchill/downloads"
			},
			{
				"container": "/tv",
				"bind": "/appdata/sickchill/tv"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sickgear",
			"name": "Sickgear",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.. For more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/sickgear-icon.png",
			"image": "linuxserver/sickgear:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				}
			],
			"ports": [
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/sickgear"
			},
			{
				"container": "/tv",
				"bind": "/appdata/sickgear/tv"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/sickgear/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Smokeping",
			"name": "Smokeping",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Smokeping.",
			"platform": "linux",
			"logo": "https://camo.githubusercontent.com/e0694ef783e3fd1d74e6776b28822ced01c7cc17/687474703a2f2f6f73732e6f6574696b65722e63682f736d6f6b6570696e672f696e632f736d6f6b6570696e672d6c6f676f2e706e67",
			"image": "linuxserver/smokeping:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/smokeping"
			},
			{
				"container": "/data",
				"bind": "/appdata/smokeping/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Snapdrop",
			"name": "Snapdrop",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Snapdrop A local file sharing in your browser. Inspired by Apple's Airdrop.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png",
			"image": "linuxserver/snapdrop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/snapdrop"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Snipe-it",
			"name": "Snipe-it",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Snipe-it makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
			"platform": "linux",
			"logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png",
			"image": "linuxserver/snipe-it:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "NGINX_APP_URL",
					"label": "NGINX_APP_URL",
					"default": "<hostname or ip>",
					"description": "Hostname or IP and port if applicable IE <ip or hostname>:8080"
				},
				{
					"name": "MYSQL_PORT_3306_TCP_ADDR",
					"label": "MYSQL_PORT_3306_TCP_ADDR",
					"default": "<mysql host>",
					"description": "Mysql hostname or IP to use"
				},
				{
					"name": "MYSQL_PORT_3306_TCP_PORT",
					"label": "MYSQL_PORT_3306_TCP_PORT",
					"default": "<mysql port>",
					"description": "Mysql port to use"
				},
				{
					"name": "MYSQL_DATABASE",
					"label": "MYSQL_DATABASE",
					"default": "<mysql database>",
					"description": "Mysql database to use"
				},
				{
					"name": "MYSQL_USER",
					"label": "MYSQL_USER",
					"default": "<mysql pass>",
					"description": "Mysql user to use"
				},
				{
					"name": "MYSQL_PASSWORD",
					"label": "MYSQL_PASSWORD",
					"default": "changeme",
					"description": "Mysql password to use"
				}
			],
			"ports": [
				"8080:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/snipe-it"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sonarr",
			"name": "Sonarr",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Sonarr is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/sonarr-icon.png",
			"image": "linuxserver/sonarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8989:8989/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/sonarr"
			},
			{
				"container": "/tv",
				"bind": "/appdata/sonarr/tv"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/sonarr/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sqlitebrowser",
			"name": "Sqlitebrowser",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "DB Browser for SQLite is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
			"image": "linuxserver/sqlitebrowser:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/sqlitebrowser"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Swag",
			"name": "Swag",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/swag-icon.png",
			"image": "linuxserver/swag:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "URL",
					"label": "URL",
					"default": "yourdomain.url",
					"description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns)."
				},
				{
					"name": "VALIDATION",
					"label": "VALIDATION",
					"default": "http",
					"description": "Certbot validation method to use, options are `http`, `dns` or `duckdns` (`dns` method also requires `DNSPLUGIN` variable set) (`duckdns` method requires `DUCKDNSTOKEN` variable set, and the `SUBDOMAINS` variable must be either empty or set to `wildcard`)."
				},
				{
					"name": "SUBDOMAINS",
					"label": "SUBDOMAINS",
					"default": "www,",
					"description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this _exactly_ to `wildcard` (wildcard cert is available via `dns` and `duckdns` validation only)"
				},
				{
					"name": "CERTPROVIDER",
					"label": "CERTPROVIDER",
					"default": "",
					"description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account. Otherwise defaults to Let's Encrypt."
				},
				{
					"name": "DNSPLUGIN",
					"label": "DNSPLUGIN",
					"default": "cloudflare",
					"description": "Required if `VALIDATION` is set to `dns`. Options are `aliyun`, `cloudflare`, `cloudxns`, `cpanel`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `domeneshop`, `gandi`, `gehirn`, `google`, `hetzner`, `inwx`, `ionos`, `linode`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `rfc2136`, `route53`, `sakuracloud`, `transip` and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/dns-conf`."
				},
				{
					"name": "PROPAGATION",
					"label": "PROPAGATION",
					"default": "",
					"description": "Optionally override (in seconds) the default propagation time for the dns plugins."
				},
				{
					"name": "DUCKDNSTOKEN",
					"label": "DUCKDNSTOKEN",
					"default": "",
					"description": "Required if `VALIDATION` is set to `duckdns`. Retrieve your token from https://www.duckdns.org"
				},
				{
					"name": "EMAIL",
					"label": "EMAIL",
					"default": "",
					"description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL)."
				},
				{
					"name": "ONLY_SUBDOMAINS",
					"label": "ONLY_SUBDOMAINS",
					"default": "false",
					"description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`"
				},
				{
					"name": "EXTRA_DOMAINS",
					"label": "EXTRA_DOMAINS",
					"default": "",
					"description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`"
				},
				{
					"name": "STAGING",
					"label": "STAGING",
					"default": "false",
					"description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes."
				},
				{
					"name": "MAXMINDDB_LICENSE_KEY",
					"label": "MAXMINDDB_LICENSE_KEY",
					"default": "",
					"description": "Add your MaxmindDB license key to automatically download the GeoLite2-City.mmdb database. Download location is /geoip2db. The database is updated weekly."
				}
			],
			"ports": [
				"443:443/tcp",
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/swag"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Synclounge",
			"name": "Synclounge",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Synclounge is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/synclounge-icon.png",
			"image": "linuxserver/synclounge:latest",
			"env": [
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "AUTH_LIST",
					"label": "AUTH_LIST",
					"default": "plexuser1,plexuser2,email1,machineid1",
					"description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces."
				},
				{
					"name": "AUTOJOIN_ENABLED",
					"label": "AUTOJOIN_ENABLED",
					"default": "false",
					"description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set to `true` to let users autojoin the server and a room (specified by the `AUTOJOIN_ROOM` var)."
				},
				{
					"name": "AUTOJOIN_ROOM",
					"label": "AUTOJOIN_ROOM",
					"default": "roomname",
					"description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set the room name for auto joining (requires `AUTOJOIN_ENABLED` set to `true`)."
				}
			],
			"ports": [
				"8088:8088/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Syncthing",
			"name": "Syncthing",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/syncthing-icon.png",
			"image": "linuxserver/syncthing:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8384:8384/tcp",
				"22000:22000/tcp",
				"22000:22000/udp",
				"21027:21027/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/syncthing"
			},
			{
				"container": "/data1",
				"bind": "/appdata/syncthing/data1"
			},
			{
				"container": "/data2",
				"bind": "/appdata/syncthing/data2"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Syslog-ng",
			"name": "Syslog-ng",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "syslog-ng allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.",
			"categories": [
				"System Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png",
			"image": "linuxserver/syslog-ng:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"514:5514/udp",
				"601:6601/tcp",
				"6514:6514/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/syslog-ng"
			},
			{
				"container": "/var/log",
				"bind": "/var/log"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Taisun",
			"name": "Taisun",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Taisun is an application for a Docker enabled device with an emphasis on providing a web based interface for managing a single server. Taisun allows you to: - Deploy and manage web based virtual desktops. - Deploy Taisun specific stacks of applications - Browse available images on popular Docker repositories - Import a Docker project from any git repository and start developing on your choice of web based IDE or full Linux desktop - Spinup a developer container based on popular frameworks and work from a web based IDE - Single click remote server access to Taisun and your Docker applications",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Taisun-Docker/taisun/master/public/favicon/apple-icon-180x180.png",
			"image": "linuxserver/taisun:latest",
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/var/run/docker.sock",
				"bind": "/var/run/docker.sock"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Tautulli",
			"name": "Tautulli",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Tautulli is a python based web application for monitoring, analytics and notifications for Plex Media Server.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png",
			"image": "linuxserver/tautulli:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"8181:8181/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/tautulli"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Thelounge",
			"name": "Thelounge",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Thelounge is a web IRC client that you host on your own server.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true",
			"image": "linuxserver/thelounge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"9000:9000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/thelounge"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Transmission",
			"name": "Transmission",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission.png",
			"image": "linuxserver/transmission:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "TRANSMISSION_WEB_HOME",
					"label": "TRANSMISSION_WEB_HOME",
					"default": "/combustion-release/",
					"description": "Specify an alternative UI options are [`/combustion-release/`."
				},
				{
					"name": "USER",
					"label": "USER",
					"default": "username",
					"description": "Specify an optional username for the interface"
				},
				{
					"name": "PASS",
					"label": "PASS",
					"default": "password",
					"description": "Specify an optional password for the interface"
				},
				{
					"name": "WHITELIST",
					"label": "WHITELIST",
					"default": "iplist",
					"description": "Specify an optional list of comma separated ip whitelist. Fill rpc-whitelist setting."
				},
				{
					"name": "HOST_WHITELIST",
					"label": "HOST_WHITELIST",
					"default": "dnsnane list",
					"description": "Specify an optional list of comma separated dns name whitelist. Fill rpc-host-whitelist setting."
				}
			],
			"ports": [
				"9091:9091/tcp",
				"51413:51413/tcp",
				"51413:51413/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/transmission"
			},
			{
				"container": "/downloads",
				"bind": "/appdata/transmission/downloads"
			},
			{
				"container": "/watch",
				"bind": "/appdata/transmission/watch"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Tvheadend",
			"name": "Tvheadend",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Tvheadend.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tvheadend-big.png",
			"image": "linuxserver/tvheadend:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "<run options here>",
					"description": "Optionally specify additional arguments to be passed. See Additional runtime parameters."
				}
			],
			"ports": [
				"9981:9981/tcp",
				"9982:9982/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/tvheadend"
			},
			{
				"container": "/recordings",
				"bind": "/appdata/tvheadend/recordings"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ubooquity",
			"name": "Ubooquity",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-banner.png",
			"image": "linuxserver/ubooquity:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "MAXMEM",
					"label": "MAXMEM",
					"default": "<maxmem>",
					"description": "To set the maximum memory. ( ex: set '1024' for 1GB )"
				}
			],
			"ports": [
				"2202:2202/tcp",
				"2203:2203/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/ubooquity"
			},
			{
				"container": "/books",
				"bind": "/appdata/ubooquity/books"
			},
			{
				"container": "/comics",
				"bind": "/appdata/ubooquity/comics"
			},
			{
				"container": "/files",
				"bind": "/appdata/ubooquity/files"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Unifi-controller",
			"name": "Unifi-controller",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "The [Unifi-controller Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
			"categories": [
				"Networking"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
			"image": "linuxserver/unifi-controller:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "MEM_LIMIT",
					"label": "MEM_LIMIT",
					"default": "1000M",
					"description": "Optionally change the Java memory limit (-Xmx) (default is 1024M)."
				},
				{
					"name": "MEM_STARTUP",
					"label": "MEM_STARTUP",
					"default": "1000M",
					"description": "Optionally change the Java initial memory (-Xms) (default is 1024M)."
				}
			],
			"ports": [
				"3478:3478/udp",
				"10001:10001/udp",
				"8080:8080/tcp",
				"8443:8443/tcp",
				"1900:1900/udp",
				"8843:8843/tcp",
				"8880:8880/tcp",
				"6789:6789/tcp",
				"5514:5514/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/unifi-controller"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Webgrabplus",
			"name": "Webgrabplus",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Webgrabplus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
			"platform": "linux",
			"logo": "http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg",
			"image": "linuxserver/webgrabplus:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/webgrabplus"
			},
			{
				"container": "/data",
				"bind": "/appdata/webgrabplus/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Webtop",
			"name": "Webtop",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Webtop - Alpine and Ubuntu based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
			"categories": [
				"Utilities"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
			"image": "linuxserver/webtop:latest",
			"privileged": true,
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/webtop"
			},
			{
				"container": "/var/run/docker.sock",
				"bind": "/var/run/docker.sock"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Wikijs",
			"name": "Wikijs",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
			"platform": "linux",
			"logo": "https://static.requarks.io/logo/wikijs-full.svg",
			"image": "linuxserver/wikijs:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/wikijs"
			},
			{
				"container": "/data",
				"bind": "/appdata/wikijs/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Wireguard",
			"name": "Wireguard",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "WireGuard® and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/mrfurr1218-stack-src/portainer-templates/main/images/wireguard-red.png",
			"image": "linuxserver/wireguard:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				},
				{
					"name": "SERVERURL",
					"label": "SERVERURL",
					"default": "wireguard.domain.com",
					"description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically"
				},
				{
					"name": "SERVERPORT",
					"label": "SERVERPORT",
					"default": "51820",
					"description": "External port for docker host. Used in server mode."
				},
				{
					"name": "PEERS",
					"label": "PEERS",
					"default": "1",
					"description": "Number of peers to create confs for. Required for server mode. Can be a list of names too: myPC,myPhone,myTablet..."
				},
				{
					"name": "PEERDNS",
					"label": "PEERDNS",
					"default": "auto",
					"description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward."
				},
				{
					"name": "INTERNAL_SUBNET",
					"label": "INTERNAL_SUBNET",
					"default": "10.13.13.0",
					"description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode."
				},
				{
					"name": "ALLOWEDIPS",
					"label": "ALLOWEDIPS",
					"default": "0.0.0.0/0",
					"description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1."
				}
			],
			"ports": [
				"51820:51820/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/wireguard"
			},
			{
				"container": "/lib/modules",
				"bind": "/lib/modules"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Wireshark",
			"name": "Wireshark",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Wireshark standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
			"image": "linuxserver/wireshark:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/wireshark"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Xbackbone",
			"name": "Xbackbone",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Xbackbone is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
			"image": "linuxserver/xbackbone:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/xbackbone"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Yq",
			"name": "Yq",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/yq for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/yq:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/yq"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Znc",
			"name": "Znc",
			"note": "Portainer App Templates based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p></p>",
			"description": "Znc is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
			"platform": "linux",
			"logo": "http://wiki.znc.in/resources/assets/wiki.png",
			"image": "linuxserver/znc:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1000",
					"description": "for GroupID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "1000",
					"description": "for UserID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "America/Chicago",
					"description": "Specify a timezone to use for example America/Chicago"
				}
			],
			"ports": [
				"6501:6501/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/appdata/znc"
			}
			],
			"restart_policy": "unless-stopped"
		}
	]
}
